/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PostIndexRouteImport } from './routes/post/index'
import { Route as TagTagIdRouteImport } from './routes/tag/$tagId'
import { Route as PostPostIdRouteImport } from './routes/post/$postId'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostIndexRoute = PostIndexRouteImport.update({
  id: '/post/',
  path: '/post/',
  getParentRoute: () => rootRouteImport,
} as any)
const TagTagIdRoute = TagTagIdRouteImport.update({
  id: '/tag/$tagId',
  path: '/tag/$tagId',
  getParentRoute: () => rootRouteImport,
} as any)
const PostPostIdRoute = PostPostIdRouteImport.update({
  id: '/post/$postId',
  path: '/post/$postId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/post/$postId': typeof PostPostIdRoute
  '/tag/$tagId': typeof TagTagIdRoute
  '/post': typeof PostIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/post/$postId': typeof PostPostIdRoute
  '/tag/$tagId': typeof TagTagIdRoute
  '/post': typeof PostIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/post/$postId': typeof PostPostIdRoute
  '/tag/$tagId': typeof TagTagIdRoute
  '/post/': typeof PostIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/post/$postId'
    | '/tag/$tagId'
    | '/post'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/signup' | '/post/$postId' | '/tag/$tagId' | '/post'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/signup'
    | '/post/$postId'
    | '/tag/$tagId'
    | '/post/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  PostPostIdRoute: typeof PostPostIdRoute
  TagTagIdRoute: typeof TagTagIdRoute
  PostIndexRoute: typeof PostIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/post/': {
      id: '/post/'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tag/$tagId': {
      id: '/tag/$tagId'
      path: '/tag/$tagId'
      fullPath: '/tag/$tagId'
      preLoaderRoute: typeof TagTagIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/post/$postId': {
      id: '/post/$postId'
      path: '/post/$postId'
      fullPath: '/post/$postId'
      preLoaderRoute: typeof PostPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  PostPostIdRoute: PostPostIdRoute,
  TagTagIdRoute: TagTagIdRoute,
  PostIndexRoute: PostIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
